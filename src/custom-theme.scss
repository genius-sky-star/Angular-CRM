
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$angular-test-primary: mat.define-palette(mat.$indigo-palette);
$angular-test-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$angular-test-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$angular-test-theme: mat.define-light-theme((
  color: (
    primary: $angular-test-primary,
    accent: $angular-test-accent,
    warn: $angular-test-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($angular-test-theme);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$rocoh-poc-primary: mat.define-palette(mat.$indigo-palette);
$rocoh-poc-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$rocoh-poc-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$rocoh-poc-theme: mat.define-light-theme((
  color: (
    primary: $rocoh-poc-primary,
    accent: $rocoh-poc-accent,
    warn: $rocoh-poc-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($rocoh-poc-theme);


/* Snack bar styles */
.mat-mdc-snack-bar-container {
  margin-top: 25px !important;
  font-size: 16px;
}
.mat-mdc-snack-bar-label {
  width: 600px;
}
.success-snackbar {
  --mdc-snackbar-container-color: var(--color-success-light);
  --mdc-snackbar-supporting-text-color: var(--color-success-dark);

  .mat-mdc-snack-bar-label.mdc-snackbar__label {
    display: flex;
    align-items: center;
    &::before {
      content: '\f058';
      font-family: 'FontAwesome';
      display: block;
      font-size: 21px;
      margin-right: 15px;
    }
  }
}
.error-snackbar {
  --mdc-snackbar-container-color: var(--color-error-light);
  --mdc-snackbar-supporting-text-color: var(--color-error-dark);

  .mat-mdc-snack-bar-label.mdc-snackbar__label {
    display: flex;
    align-items: center;
    &::before {
      content: '\f057';
      font-family: 'FontAwesome';
      display: block;
      font-size: 21px;
      margin-right: 15px;
    }
  }
}


